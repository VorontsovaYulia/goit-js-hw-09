{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACHN,EAERI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAGpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEhBA,E,IAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBhB,EAAAmB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAEhEM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAChBhB,EAAAmB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAKhEd,EAAKsB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAUJ,IAPA,IAAMC,EAAUF,EAAIG,cAAcC,SAE9BC,EAAaC,OAAOJ,EAAQX,MAAMgB,OAChCC,EAAYF,OAAOJ,EAAQO,KAAKF,OAChCG,EAAcJ,OAAOJ,EAAQS,OAAOJ,OAGjCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACjCA,EAAI,IACNP,GAAcG,GAEhB5B,EAAcgC,EAAGP,GAEnB5B,EAAKoC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        if (shouldResolve) {\n    \n    resolve({ position, delay })\n  } else {\n\n    reject({ position, delay })\n  }\n    }, delay)\n  })\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    })\n  .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    })\n  \n}\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n \n\n  const current = evt.currentTarget.elements;\n  \n  let inputDelay = Number(current.delay.value);\n  const inputStep = Number(current.step.value);\n  const inputAmount = Number(current.amount.value);\n  \n\n  for (let i = 1; i <= inputAmount; i += 1){\n    if (i > 1) {\n      inputDelay += inputStep;\n    }\n    createPromise(i, inputDelay)\n  }\n  form.reset();\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","current","currentTarget","elements","inputDelay","Number","value","inputStep","step","inputAmount","amount","i","reset"],"version":3,"file":"03-promises.92acb2dc.js.map"}